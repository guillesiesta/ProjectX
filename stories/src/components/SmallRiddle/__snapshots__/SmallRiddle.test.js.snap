// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SmallRiddle Rendering the simple component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SmallRiddle />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="box-header with-border"
      >
        <div
          className="row"
        >
          <strong />
          <p>
            por defecto
          </p>
          <button
            className="btn btn-default"
            type="submit"
          >
            Acceder
          </button>
        </div>
      </div>,
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
        >
          <strong />
          <p>
            por defecto
          </p>
          <button
            className="btn btn-default"
            type="submit"
          >
            Acceder
          </button>
        </div>,
        "className": "box-header with-border",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <strong />,
            <p>
              por defecto
            </p>,
            <button
              className="btn btn-default"
              type="submit"
            >
              Acceder
            </button>,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "strong",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "por defecto",
            },
            "ref": null,
            "rendered": "por defecto",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Acceder",
              "className": "btn btn-default",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Acceder",
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="box-header with-border"
        >
          <div
            className="row"
          >
            <strong />
            <p>
              por defecto
            </p>
            <button
              className="btn btn-default"
              type="submit"
            >
              Acceder
            </button>
          </div>
        </div>,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row"
          >
            <strong />
            <p>
              por defecto
            </p>
            <button
              className="btn btn-default"
              type="submit"
            >
              Acceder
            </button>
          </div>,
          "className": "box-header with-border",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong />,
              <p>
                por defecto
              </p>,
              <button
                className="btn btn-default"
                type="submit"
              >
                Acceder
              </button>,
            ],
            "className": "row",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "strong",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "por defecto",
              },
              "ref": null,
              "rendered": "por defecto",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Acceder",
                "className": "btn btn-default",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Acceder",
              "type": "button",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
