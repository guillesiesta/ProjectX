// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Rendering the simple component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <a
          className="logo"
        >
          <span
            className="logo-mini"
          >
            <b>
              D
            </b>
            P
          </span>
          <span
            className="logo-lg"
          >
            <b>
              Detective
            </b>
            Panel
          </span>
        </a>,
        <nav
          className="navbar navbar-static-top"
        >
          <a
            className="sidebar-toggle"
            data-toggle="push-menu"
            role="button"
          >
            <span
              className="sr-only"
            >
              Opciones Detective
            </span>
          </a>
          <div
            className="navbar-custom-menu"
          >
            <ul
              className="nav navbar-nav"
            >
              <li
                className="dropdown messages-menu"
              />
            </ul>
          </div>
        </nav>,
      ],
      "className": "main-header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="logo-mini"
            >
              <b>
                D
              </b>
              P
            </span>,
            <span
              className="logo-lg"
            >
              <b>
                Detective
              </b>
              Panel
            </span>,
          ],
          "className": "logo",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  D
                </b>,
                "P",
              ],
              "className": "logo-mini",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "D",
                },
                "ref": null,
                "rendered": "D",
                "type": "b",
              },
              "P",
            ],
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  Detective
                </b>,
                "Panel",
              ],
              "className": "logo-lg",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Detective",
                },
                "ref": null,
                "rendered": "Detective",
                "type": "b",
              },
              "Panel",
            ],
            "type": "span",
          },
        ],
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="sidebar-toggle"
              data-toggle="push-menu"
              role="button"
            >
              <span
                className="sr-only"
              >
                Opciones Detective
              </span>
            </a>,
            <div
              className="navbar-custom-menu"
            >
              <ul
                className="nav navbar-nav"
              >
                <li
                  className="dropdown messages-menu"
                />
              </ul>
            </div>,
          ],
          "className": "navbar navbar-static-top",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="sr-only"
              >
                Opciones Detective
              </span>,
              "className": "sidebar-toggle",
              "data-toggle": "push-menu",
              "role": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Opciones Detective",
                "className": "sr-only",
              },
              "ref": null,
              "rendered": "Opciones Detective",
              "type": "span",
            },
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ul
                className="nav navbar-nav"
              >
                <li
                  className="dropdown messages-menu"
                />
              </ul>,
              "className": "navbar-custom-menu",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <li
                  className="dropdown messages-menu"
                />,
                "className": "nav navbar-nav",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "dropdown messages-menu",
                },
                "ref": null,
                "rendered": null,
                "type": "li",
              },
              "type": "ul",
            },
            "type": "div",
          },
        ],
        "type": "nav",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <a
            className="logo"
          >
            <span
              className="logo-mini"
            >
              <b>
                D
              </b>
              P
            </span>
            <span
              className="logo-lg"
            >
              <b>
                Detective
              </b>
              Panel
            </span>
          </a>,
          <nav
            className="navbar navbar-static-top"
          >
            <a
              className="sidebar-toggle"
              data-toggle="push-menu"
              role="button"
            >
              <span
                className="sr-only"
              >
                Opciones Detective
              </span>
            </a>
            <div
              className="navbar-custom-menu"
            >
              <ul
                className="nav navbar-nav"
              >
                <li
                  className="dropdown messages-menu"
                />
              </ul>
            </div>
          </nav>,
        ],
        "className": "main-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="logo-mini"
              >
                <b>
                  D
                </b>
                P
              </span>,
              <span
                className="logo-lg"
              >
                <b>
                  Detective
                </b>
                Panel
              </span>,
            ],
            "className": "logo",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <b>
                    D
                  </b>,
                  "P",
                ],
                "className": "logo-mini",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "D",
                  },
                  "ref": null,
                  "rendered": "D",
                  "type": "b",
                },
                "P",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <b>
                    Detective
                  </b>,
                  "Panel",
                ],
                "className": "logo-lg",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Detective",
                  },
                  "ref": null,
                  "rendered": "Detective",
                  "type": "b",
                },
                "Panel",
              ],
              "type": "span",
            },
          ],
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="sidebar-toggle"
                data-toggle="push-menu"
                role="button"
              >
                <span
                  className="sr-only"
                >
                  Opciones Detective
                </span>
              </a>,
              <div
                className="navbar-custom-menu"
              >
                <ul
                  className="nav navbar-nav"
                >
                  <li
                    className="dropdown messages-menu"
                  />
                </ul>
              </div>,
            ],
            "className": "navbar navbar-static-top",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="sr-only"
                >
                  Opciones Detective
                </span>,
                "className": "sidebar-toggle",
                "data-toggle": "push-menu",
                "role": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Opciones Detective",
                  "className": "sr-only",
                },
                "ref": null,
                "rendered": "Opciones Detective",
                "type": "span",
              },
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ul
                  className="nav navbar-nav"
                >
                  <li
                    className="dropdown messages-menu"
                  />
                </ul>,
                "className": "navbar-custom-menu",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <li
                    className="dropdown messages-menu"
                  />,
                  "className": "nav navbar-nav",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "dropdown messages-menu",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "li",
                },
                "type": "ul",
              },
              "type": "div",
            },
          ],
          "type": "nav",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
